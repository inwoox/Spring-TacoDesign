
# 서비스는 유레카를 통해서만 찾게 되므로, 애플리케이션이 리스닝하는 포트(접근 포트)는 의미가 없다. (유레카가 리스닝 포트를 알고 있기 때문에)
# 그렇기 때문에 서비스의 포트 충돌을 막기 위해, 0으로 설정하여, 포트번호가 무작위로 선택되게 한다. 
server:
  port: 0
  
# 서비스의 이름을 설정한다. (설정하지 않으면, 기본 이름인 UNKNOWN이 된다.)
spring:
  application:
    name: ingredient-service
    

# 기본적으로 유레카 클라이언트는 유레카 서버가 localhost의 8761 포트로 리스닝한다고 간주한다.
# 운영환경에서는 맞지 않으므로, 유레카 서버의 위치를 지정해야한다.

# 이렇게하면 localhost의 8761 포트로 리스닝하는 유레카 서버에 등록되도록 클라이언트가 구성된다.
# 그리고 만약 첫번째 유레카 서버에 등록을 실패할 경우, 두번째로 지정한 유레카 서버에 등록을 시도한다.
# 이후 등록에 실패했던 유레카 서버가 다시 온라인 상태가 되면, 해당 서비스의 등록 정보가 포함된 피어 서버 레지스트리가 복제된다.
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/, http://eureka1.tacocloud.com:8761/eureka/