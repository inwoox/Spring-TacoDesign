

# 중앙 집중식 구성 서버가 있을 때는, 대부분의 모든 구성이 서버에서 제공되기 때문에, 
# 마이크로서비스가 자신의 구성을 가질 필요가 없으며, 두개의 구성 속성만 설정한다.

spring:
  # 유레카에 서비스 이름을 알려주는 name 속성이며, 또한 애플리케이션에 특정된 속성을 제공하는 방법이다.
  # 예를 들어 아래와 같이할 경우, GitRepo에 config-client.yml이라는 애플리케이션에 특정된 구성 파일에서 우선적으로 구성 속성을 가져온다.
  application:
    name: config-client
  
  # 또한 GitRepo에 application-production.yml 처럼 프로파일에 특정된 구성이, 공통 속성인 application.yml보다 우선
  # config-client-dev.yml처럼 , 애플리케이션과 프로파일 모두에 특정된 구성도 있을 수 있다.
  
  # 특히 properties보다 yaml 파일을 사용하면, 3개의 하이픈(---)과 spring.profiles를 통해,
  # 기본 프로파일 파일에, 다른 프로파일에 특정된 속성들까지 나타낼 수 있다.
  

  # 구성 서버의 위치를 지정하는 uri (설정하지 않으면, 기본적으로 자동 구성은 localhost:8888에서 서버가 실행 중인 것으로 간주)
  cloud:
    config:
      uri: http://localhost:8888  

