
# bootstrap.yml에 설정하면, 자동 구성이 구성 서버를 활성화시키기 전에, 이 설정들이 로드 되어 사용 된다.


# 대칭키를 통한 암호화
# curl localhost:8888/encrypt -d "암호화할 문자열" , encrypt 엔드포인트 호출하여 암호화
#encrypt:
#  key: genesis32


# 한쌍의 비대칭 RSA 키 / 키스토어 참조를 통한 암호화
# 아래와 같이 keystore.jks 파일을 만들고, classpath(/resources)에 위치시킨 후, encrypt 엔드포인트를 호출해 암호화한다.
# keytool -genkeypair -alias tacokey -keyalg RSA -dname "CN=Web Server,OU=Unit,O=Organization,L=City,S=State,C=US" \
# -keypass genesis32 -keystore keystore.jks -storepass genesis32
encrypt:
  key-store:
    alias: tacokey
    location: classpath:/keystore.jks
    password: genesis32  # storepass
    secret: genesis32    # keypass
    
    

# 암호화된 값을 사용할 때는, encrypt 엔드포인트를 호출하고 나온 값을 아래와 같이 적용한다.
# {cipher}는 해당 값이 암호화된 값이라는 것을 구성 서버에 알려주는 것이다.
# 이런 형태로 암호화된 값을 Git Repo의 application.yml 등에 적용하면, curl 등으로 호출시에는 복호화된 값으로 가져온다.

# spring:
#   data:
#     mongodb:
#       password: '{cipher}2893591845901845901adklrjaklerj134...'



